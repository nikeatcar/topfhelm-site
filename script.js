document.addEventListener("DOMContentLoaded", function () {
    const buttons = document.querySelectorAll(".button");
    const presaveBtn = document.getElementById("presave-btn");

    //–†–∞–∑–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã
    document.addEventListener("DOMContentLoaded", function () {
        if (window.location.href.includes("index-ru.html")) {
            document.body.classList.add("ru");
        }
    });

    // –ê–Ω–∏–º–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
    buttons.forEach(button => {
        button.addEventListener("mouseenter", () => {
            let intensity = 3;
            let shakeInterval = setInterval(() => {
                let x = (Math.random() * intensity * 2) - intensity;
                let y = (Math.random() * intensity * 2) - intensity;
                button.style.transform = `translate(${x}px, ${y}px)`;
            }, 50);

            setTimeout(() => {
                clearInterval(shakeInterval);
                button.style.transform = "translate(0, 0)";
            }, 300);
        });
    });

    // –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏ Presave Now
if (presaveBtn) {
    presaveBtn.addEventListener("mouseenter", function () {
        this.style.transition = "background-color 0.3s ease-in-out";
        this.style.backgroundColor = "#FF6666"; // –ú–µ–Ω—è–µ–º —Ü–≤–µ—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
        setTimeout(() => {
            this.innerHTML = window.location.href.includes("index-ru.html", "/ru") 
                ? "<span>‚ù§Ô∏è–°–ø–∞—Å–∏–±–æ!‚ù§Ô∏è</span>" 
                : "<span>‚ù§Ô∏èThank You!‚ù§Ô∏è</span>";
        }, 200);
    });
    
    presaveBtn.addEventListener("mouseleave", function () {
        this.style.transition = "background-color 0.3s ease-in-out";
        this.style.backgroundColor = "#1DB954"; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ü–≤–µ—Ç
        setTimeout(() => {
            this.innerHTML = window.location.href.includes("index-ru.html", "/ru") 
                ? "<span>–ü—Ä–µ–¥—Å–æ—Ö—Ä–∞–Ω—è–π</span>" 
                : "<span>Presave Now</span>";
        }, 200);
    });
    }
    });

    // –ü–∞—Ä–∞–ª–ª–∞–∫—Å-—ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è —Ñ–æ–Ω–∞
    window.addEventListener("scroll", function () {
        let scrollTop = window.scrollY;
        let parallaxSpeed = 0.01;
        document.querySelector(".blurred-bg").style.transform = `translateY(${scrollTop * parallaxSpeed}px)`;
    });

        //–¢–∞–π–º–µ—Ä —Ä–µ–ª–∏–∑–∞
        document.addEventListener("DOMContentLoaded", function () {
            // –£–∫–∞–∑—ã–≤–∞–µ–º –¥–∞—Ç—É —Ä–µ–ª–∏–∑–∞ –∞–ª—å–±–æ–º–∞
            const releaseDate = new Date("March 28, 2025 08:00:00").getTime();
            const countdownText = document.getElementById("countdown-text");
        
            function updateCountdown() {
                const now = new Date().getTime();
                const timeLeft = releaseDate - now;
        
                if (timeLeft <= 0) {
                    countdownText.innerHTML = "The feast has begun! üçª‚öîÔ∏è";
                    return;
                }
        
                // –í—ã—á–∏—Å–ª—è–µ–º –¥–Ω–∏, —á–∞—Å—ã, –º–∏–Ω—É—Ç—ã –∏ —Å–µ–∫—É–Ω–¥—ã
                const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
                const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
                const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);
        
                if (window.location.href.includes("index-ru.html")) {
                    countdownText.innerHTML = `‚è≥ –í–µ–ª–∏–∫–∏–π –ø–∏—Ä –Ω–∞—á–Ω—ë—Ç—Å—è —á–µ—Ä–µ–∑: 
                    <span class="time">${days}</span>–¥ 
                    <span class="time">${hours}</span>—á 
                    <span class="time">${minutes}</span>–º 
                    <span class="time">${seconds}</span>—Å`;
                } else {
                    countdownText.innerHTML = `‚è≥ The grand feast begins in: 
                    <span class="time">${days}</span>d 
                    <span class="time">${hours}</span>h 
                    <span class="time">${minutes}</span>m 
                    <span class="time">${seconds}</span>s`;
                }
            }
        
            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
            setInterval(updateCountdown, 1000);
            updateCountdown(); // –í—ã–∑—ã–≤–∞–µ–º —Å—Ä–∞–∑—É, —á—Ç–æ–±—ã –Ω–µ –∂–¥–∞—Ç—å 1 —Å–µ–∫—É–Ω–¥—É
        });

        //–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–æ–≤
        document.addEventListener("DOMContentLoaded", function () {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —Ä–∞–Ω–µ–µ –≤—ã–±—Ä–∞–Ω —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            const savedLang = localStorage.getItem("lang");
            if (savedLang) {
                if (savedLang === "ru" && !window.location.href.includes("index-ru.html")) {
                    window.location.href = "index-ru.html";
                }
                if (savedLang === "en" && window.location.href.includes("index-ru.html")) {
                    window.location.href = "index.html";
                }
                return;
            }
        
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫ –±—Ä–∞—É–∑–µ—Ä–∞
            const userLang = navigator.language || navigator.userLanguage;
            
            // –ï—Å–ª–∏ —è–∑—ã–∫ —Ä—É—Å—Å–∫–∏–π, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Ä—É—Å—Å–∫—É—é –≤–µ—Ä—Å–∏—é (–µ—Å–ª–∏ –µ—â—ë –Ω–µ –Ω–∞ –Ω–µ–π)
            if (userLang.startsWith("ru") && !window.location.href.includes("index-ru.html")) {
                window.location.href = "index-ru.html";
            }
        });
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–º–µ–Ω—ã —è–∑—ã–∫–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞
        function switchLanguage(lang) {
            localStorage.setItem("lang", lang);
            if (lang === "ru") {
                window.location.href = "index-ru.html";
            } else {
                window.location.href = "index.html";
            }
        }
        
        // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏
        function copyLink() {
            navigator.clipboard.writeText(window.location.href).then(() => {
                alert("Link copied to clipboard!");
            });
        }

        //–®–∞—Ä–∏–Ω–≥
        function openShareModal() {
            document.getElementById("share-modal").classList.add("active");
            document.body.classList.add("no-scroll");
        }
        
        function closeShareModal() {
            document.getElementById("share-modal").classList.remove("active");
            document.body.classList.remove("no-scroll");
        }
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫ –∏–∑ URL
        function getLangFromURL() {
            if (window.location.pathname.includes("/ru") || window.location.href.includes("index-ru.html")) {
                return "ru";
            }
            return "en"; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
        }

        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —Å–æ—Ü—Å–µ—Ç–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
        function shareTo(platform) {
        const url = encodeURIComponent(window.location.href);
        const lang = getLangFromURL(); // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫
        let shareText = lang === "ru" ? "–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —ç—Ç–∏–º –∫—Ä—É—Ç—ã–º Dungeon Folk –ø—Ä–æ–µ–∫—Ç–æ–º —Å –¥—Ä—É–∑—å—è–º–∏!" : "Check out this awesome Dungeon Folk project!";

        let shareUrl = "";

    switch (platform) {
        case "facebook":
            shareUrl = `https://www.facebook.com/sharer/sharer.php?u=${url}&quote=${encodeURIComponent(shareText)}`;
            break;
        case "vk":
            shareUrl = `https://vk.com/share.php?url=${url}&title=${encodeURIComponent(shareText)}`;
            break;
        case "telegram":
            shareUrl = `https://t.me/share/url?url=${url}&text=${encodeURIComponent(shareText)}`;
            break;
        case "x":
            shareUrl = `https://twitter.com/intent/tweet?url=${url}&text=${encodeURIComponent(shareText)}`;
            break;
        case "reddit":
            shareUrl = `https://www.reddit.com/submit?url=${url}&title=${encodeURIComponent(shareText)}`;
            break;
        case "discord":
            shareUrl = `https://discord.com/channels/@me`;
            break;
        case "ok":
            shareUrl = `https://connect.ok.ru/dk?st.cmd=WidgetSharePreview&st.shareUrl=${url}`;
            break;
        case "tumblr":
            shareUrl = `https://www.tumblr.com/share/link?url=${url}&name=${encodeURIComponent(shareText)}`;
            break;
        case "whatsapp":
            shareUrl = `https://api.whatsapp.com/send?text=${encodeURIComponent(shareText + " " + url)}`;
            break;
        case "viber":
            shareUrl = `viber://forward?text=${encodeURIComponent(shareText + " " + url)}`;
            break;
        case "email":
            shareUrl = `mailto:?subject=${encodeURIComponent(shareText)}&body=${url}`;
            break;
    }

    if (shareUrl) {
        window.open(shareUrl, "_blank");
    }
    }   
        
        // –§—É–Ω–∫—Ü–∏—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏
        function copyLink() {
            navigator.clipboard.writeText(window.location.href).then(() => {
                alert("Link copied to clipboard!");
            });
        }
        
        // –ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–æ–≤ –¥–ª—è —Ä—É—Å—Å–∫–æ–π –≤–µ—Ä—Å–∏–∏
        document.addEventListener("DOMContentLoaded", function () {
            if (window.location.href.includes("index-ru.html")) {
                document.getElementById("share-title").textContent = "–ü–æ–¥–µ–ª–∏—Å—å –Ω–∞—à–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º —Å –¥—Ä—É–∑—å—è–º–∏!";
                document.querySelector(".copy-btn").textContent = "üîó –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É";
            }
        });