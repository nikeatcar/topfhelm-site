document.addEventListener("DOMContentLoaded", function () {
    const buttons = document.querySelectorAll(".button");
    const presaveBtn = document.getElementById("presave-btn");

    // –û–±—ä–µ–∫—Ç —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏
    const translations = {
        "title": {
            "ru": "TopfHelm - Dungeon Folk –∏ Dungeon Synth –ú—É–∑—ã–∫–∞",
            "en": "TopfHelm - Dungeon Folk & Dungeon Synth Music"
        },
        "genre": {
            "ru": "–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–∞—è –º—É–∑—ã–∫–∞ –≤ —Å—Ä–µ–¥–Ω–µ–≤–µ–∫–æ–≤–æ–º —Å—Ç–∏–ª–µ –¥–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π DnD, —Ñ—ç–Ω—Ç–µ–∑–∏–π–Ω—ã—Ö –º–∏—Ä–æ–≤ –∏ –¥–∞—Ä–∫-—Ñ–æ–ª–∫–∞",
            "en": "Medieval-inspired atmospheric music for DnD, fantasy worlds, and dark folk lovers"
        },
        "albumText": {
            "ru": "–°–∫–æ—Ä–æ –≤—ã–π–¥–µ—Ç –Ω–æ–≤—ã–π –∞–ª—å–±–æ–º <span class='english-text'>\"Sanguis et Mulsum\"! ‚öîÔ∏èüç∫</span>",
            "en": "New album <span class='english-text'>\"Sanguis et Mulsum\" coming soon! ‚öîÔ∏èüç∫</span>"
        },
        "presave": {
            "ru": "–ü—Ä–µ–¥—Å–æ—Ö—Ä–∞–Ω—è–π",
            "en": "Presave Now"
        },
        "newAlbum": {
            "ru": "–ù–æ–≤—ã–π –∞–ª—å–±–æ–º",
            "en": "New Album"
        },
        "releaseDate": {
            "ru": "–≤—ã–π–¥–µ—Ç <span class='release-date'>28 –ú–∞—Ä—Ç–∞</span>! ‚öîÔ∏èüç∫",
            "en": "out <span class='release-date'>March 28</span>! ‚öîÔ∏èüç∫"
        },
        "teaser": {
            "ru": "–¢–∏–∑–µ—Ä –∞–ª—å–±–æ–º–∞",
            "en": "Album Teaser"
        },
        "support": {
            "ru": "–ü–æ–¥–¥–µ—Ä–∂–∏ –ø—Ä–æ–µ–∫—Ç",
            "en": "Support The Project"
        },
        "share": {
            "ru": "–î–µ–ª–∏—Ç—å—Å—è",
            "en": "Share"
        },
        "seoTitle": {
            "ru": "TopfHelm ‚Äì –°—Ä–µ–¥–Ω–µ–≤–µ–∫–æ–≤—ã–π Dungeon Folk, Dungeon Synth –∏ Dark Folk",
            "en": "TopfHelm ‚Äì Medieval Dungeon Folk, Dungeon Synth & Dark Folk"
        },
        "seoText": {
            "ru": "TopfHelm ‚Äî —ç—Ç–æ –ø—Ä–æ–µ–∫—Ç <strong>Dungeon Folk</strong> –∏ <strong>Dungeon Synth</strong>, –≤–¥–æ—Ö–Ω–æ–≤–ª–µ–Ω–Ω—ã–π <strong>—Å—Ä–µ–¥–Ω–µ–≤–µ–∫–æ–≤–æ–π –º—É–∑—ã–∫–æ–π</strong>, <strong>–∞—Ç–º–æ—Å—Ñ–µ—Ä–æ–π DnD</strong> –∏ <strong>—Å–∞—É–Ω–¥—Ç—Ä–µ–∫–∞–º–∏ –∫ —Ñ—ç–Ω—Ç–µ–∑–∏–π–Ω—ã–º –º–∏—Ä–∞–º</strong>. –ù–∞—à–∞ –º—É–∑—ã–∫–∞ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è <strong>—Ä–æ–ª–µ–≤—ã—Ö –∏–≥—Ä (RPG), –Ω–∞—Å—Ç–æ–ª—å–Ω—ã—Ö —Å–µ—Å—Å–∏–π –∏ —Å–æ–±—ã—Ç–∏–π –Ω–∞ —Å—Ä–µ–¥–Ω–µ–≤–µ–∫–æ–≤—É—é —Ç–µ–º–∞—Ç–∏–∫—É</strong>. –û—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ <strong>–∏—Å—Ç–æ—Ä–∏–∏ –∫—Ä–µ—Å—Ç–æ–Ω–æ—Å—Ü–µ–≤</strong>, –º—ã —Å–æ–∑–¥–∞–µ–º **–∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω—ã–π –∑–≤—É–∫–æ–≤–æ–π –ª–∞–Ω–¥—à–∞—Ñ—Ç**, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥—Ö–æ–¥–∏—Ç –∫–∞–∫ –¥–ª—è **—Ñ—ç–Ω—Ç–µ–∑–∏–π–Ω—ã—Ö —Å—Ä–∞–∂–µ–Ω–∏–π**, —Ç–∞–∫ –∏ –¥–ª—è **–ø–∏—Ä–æ–≤ –≤ –¥—Ä–µ–≤–Ω–∏—Ö –∫—Ä–µ–ø–æ—Å—Ç—è—Ö**.",
            "en": "TopfHelm is a <strong>Dungeon Folk</strong> and <strong>Dungeon Synth</strong> project inspired by <strong>medieval music</strong>, <strong>DnD atmosphere</strong>, and <strong>fantasy world soundtracks</strong>. Our music is perfect for <strong>role-playing games (RPGs), tabletop sessions, and medieval-themed events</strong>. Rooted in <strong>crusader history</strong>, we create an **atmospheric soundscape** that fits both **fantasy battles** and **ancient fortress feasts**."
        },
        "contact": {
            "ru": "–°–≤—è–∑–∞—Ç—å—Å—è",
            "en": "Contact"
        }
    };

    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const savedLang = localStorage.getItem("lang") || detectBrowserLang();
    const currentLang = getLangFromURL();

    if (savedLang !== currentLang) {
        history.replaceState(null, "", "/" + savedLang);
    }
    loadLanguageContent(savedLang);

    // ‚úÖ –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —è–∑—ã–∫–∞
    window.switchLanguage = function (lang) {
        if (getLangFromURL() !== lang) {
            localStorage.setItem("lang", lang);
            history.pushState(null, "", "/" + lang);
            loadLanguageContent(lang);
        }
    };

    function detectBrowserLang() {
        return navigator.language.startsWith("ru") ? "ru" : "en";
    }

    function getLangFromURL() {
        return window.location.pathname.includes("/ru") ? "ru" : "en";
    }

    function loadLanguageContent(lang) {
        document.body.classList.toggle("ru", lang === "ru");
        document.body.classList.toggle("en", lang === "en");

        document.querySelector("h1").innerHTML = translations["title"][lang];
        document.querySelector(".genre").innerHTML = translations["genre"][lang];
        document.querySelector("h3").innerHTML = translations["albumText"][lang];

        document.getElementById("presave-btn").innerHTML = `<span>${translations["presave"][lang]}</span>`;
        document.querySelector(".album-header span").textContent = translations["newAlbum"][lang];
        document.querySelector(".album-text p:nth-child(2)").innerHTML = translations["releaseDate"][lang];
        document.querySelector(".video-section h2").textContent = translations["teaser"][lang];
        document.querySelector(".support-section h2").textContent = translations["support"][lang];
        document.querySelector(".share-main span").textContent = translations["share"][lang];

        document.querySelector(".seo-text h2").textContent = translations["seoTitle"][lang];
        document.querySelector(".seo-text p").innerHTML = translations["seoText"][lang];

        document.querySelector(".button.contact").textContent = translations["contact"][lang];
    }

    window.addEventListener("popstate", function () {
        const lang = getLangFromURL();
        loadLanguageContent(lang);
    });

    // –ê–Ω–∏–º–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
    buttons.forEach(button => {
        button.addEventListener("mouseenter", () => {
            let intensity = 3;
            let shakeInterval = setInterval(() => {
                let x = (Math.random() * intensity * 2) - intensity;
                let y = (Math.random() * intensity * 2) - intensity;
                button.style.transform = `translate(${x}px, ${y}px)`;
            }, 50);

            setTimeout(() => {
                clearInterval(shakeInterval);
                button.style.transform = "translate(0, 0)";
            }, 300);
        });
    });

    // –¢–∞–π–º–µ—Ä —Ä–µ–ª–∏–∑–∞
    const releaseDate = new Date("March 28, 2025 08:00:00").getTime();
    const countdownText = document.getElementById("countdown-text");

    function updateCountdown() {
        const now = new Date().getTime();
        const timeLeft = releaseDate - now;

        if (timeLeft <= 0) {
            countdownText.innerHTML = "The feast has begun! üçª‚öîÔ∏è";
            return;
        }

        const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
        const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);

        countdownText.innerHTML = getLangFromURL() === "ru"
            ? `‚è≥ –í–µ–ª–∏–∫–∏–π –ø–∏—Ä –Ω–∞—á–Ω—ë—Ç—Å—è —á–µ—Ä–µ–∑: <span class="time">${days}</span>–¥ <span class="time">${hours}</span>—á <span class="time">${minutes}</span>–º <span class="time">${seconds}</span>—Å`
            : `‚è≥ The grand feast begins in: <span class="time">${days}</span>d <span class="time">${hours}</span>h <span class="time">${minutes}</span>m <span class="time">${seconds}</span>s`;
    }

    setInterval(updateCountdown, 1000);
    updateCountdown();
});
