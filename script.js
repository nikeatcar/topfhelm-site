document.addEventListener("DOMContentLoaded", function () {
    const buttons = document.querySelectorAll(".button");
    const presaveBtn = document.getElementById("presave-btn");

    // –†–∞–∑–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —è–∑—ã–∫–∞ –ø–æ URL
    const currentLang = getLangFromURL();
    document.body.classList.toggle("ru", currentLang === "ru");
    document.body.classList.toggle("en", currentLang === "en");

    // –ê–Ω–∏–º–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
    buttons.forEach(button => {
        button.addEventListener("mouseenter", () => {
            let intensity = 3;
            let shakeInterval = setInterval(() => {
                let x = (Math.random() * intensity * 2) - intensity;
                let y = (Math.random() * intensity * 2) - intensity;
                button.style.transform = `translate(${x}px, ${y}px)`;
            }, 50);

            setTimeout(() => {
                clearInterval(shakeInterval);
                button.style.transform = "translate(0, 0)";
            }, 300);
        });
    });

    // –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏ Presave Now
    if (presaveBtn) {
        presaveBtn.addEventListener("mouseenter", function () {
            this.style.transition = "background-color 0.3s ease-in-out";
            this.style.backgroundColor = "#FF6666";
            setTimeout(() => {
                this.innerHTML = getLangFromURL() === "ru" 
                    ? "<span>‚ù§Ô∏è–°–ø–∞—Å–∏–±–æ!‚ù§Ô∏è</span>" 
                    : "<span>‚ù§Ô∏èThank You!‚ù§Ô∏è</span>";
            }, 200);
        });

        presaveBtn.addEventListener("mouseleave", function () {
            this.style.transition = "background-color 0.3s ease-in-out";
            this.style.backgroundColor = "#1DB954";
            setTimeout(() => {
                this.innerHTML = getLangFromURL() === "ru" 
                    ? "<span>–ü—Ä–µ–¥—Å–æ—Ö—Ä–∞–Ω—è–π</span>" 
                    : "<span>Presave Now</span>";
            }, 200);
        });
    }

    // –¢–∞–π–º–µ—Ä —Ä–µ–ª–∏–∑–∞
    const releaseDate = new Date("March 28, 2025 08:00:00").getTime();
    const countdownText = document.getElementById("countdown-text");

    function updateCountdown() {
        const now = new Date().getTime();
        const timeLeft = releaseDate - now;

        if (timeLeft <= 0) {
            countdownText.innerHTML = "The feast has begun! üçª‚öîÔ∏è";
            return;
        }

        const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
        const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);

        countdownText.innerHTML = getLangFromURL() === "ru"
            ? `‚è≥ –í–µ–ª–∏–∫–∏–π –ø–∏—Ä –Ω–∞—á–Ω—ë—Ç—Å—è —á–µ—Ä–µ–∑: <span class="time">${days}</span>–¥ <span class="time">${hours}</span>—á <span class="time">${minutes}</span>–º <span class="time">${seconds}</span>—Å`
            : `‚è≥ The grand feast begins in: <span class="time">${days}</span>d <span class="time">${hours}</span>h <span class="time">${minutes}</span>m <span class="time">${seconds}</span>s`;
    }

    setInterval(updateCountdown, 1000);
    updateCountdown();

    // ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞
    const savedLang = localStorage.getItem("lang") || detectBrowserLang();
    if (savedLang !== currentLang) {
        history.replaceState(null, "", "/" + savedLang);
    }
    loadLanguageContent(savedLang);

    // ‚úÖ –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —è–∑—ã–∫–∞
    window.switchLanguage = function (lang) {
        if (getLangFromURL() !== lang) {
            localStorage.setItem("lang", lang);
            history.pushState(null, "", "/" + lang);
            loadLanguageContent(lang);
        }
    };

    // ‚úÖ –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —è–∑—ã–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é "en")
    function detectBrowserLang() {
        return navigator.language.startsWith("ru") ? "ru" : "en";
    }

    // ‚úÖ –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —è–∑—ã–∫–∞ –∏–∑ URL
    function getLangFromURL() {
        return window.location.pathname.includes("/ru") ? "ru" : "en";
    }

    // ‚úÖ –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
    function loadLanguageContent(lang) {
        document.body.classList.toggle("ru", lang === "ru");
        document.body.classList.toggle("en", lang === "en");
    }

    // ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –≤ –±—Ä–∞—É–∑–µ—Ä–µ
    window.addEventListener("popstate", function () {
        const lang = getLangFromURL();
        loadLanguageContent(lang);
    });

    // ‚úÖ –§—É–Ω–∫—Ü–∏—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏
    window.copyLink = function () {
        navigator.clipboard.writeText(window.location.href).then(() => {
            alert(getLangFromURL() === "ru" ? "–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!" : "Link copied to clipboard!");
        });
    };

    // ‚úÖ –§—É–Ω–∫—Ü–∏—è —à–∞—Ä–∏–Ω–≥–∞
    window.shareTo = function (platform) {
        const url = encodeURIComponent(window.location.href);
        const lang = getLangFromURL();
        let shareText = lang === "ru" ? "–ó–∞—Ü–µ–Ω–∏—Ç–µ –∫—Ä—É—Ç–æ–π Dungeon Folk –ø—Ä–æ–µ–∫—Ç TopfHelm!" : "Check out this awesome Dungeon Folk project!";
        let shareUrl = "";

        switch (platform) {
            case "facebook":
                shareUrl = `https://www.facebook.com/sharer/sharer.php?u=${url}&quote=${encodeURIComponent(shareText)}`;
                break;
            case "vk":
                shareUrl = `https://vk.com/share.php?url=${url}&title=${encodeURIComponent(shareText)}`;
                break;
            case "telegram":
                shareUrl = `https://t.me/share/url?url=${url}&text=${encodeURIComponent(shareText)}`;
                break;
            case "x":
                shareUrl = `https://twitter.com/intent/tweet?url=${url}&text=${encodeURIComponent(shareText)}`;
                break;
            case "reddit":
                shareUrl = `https://www.reddit.com/submit?url=${url}&title=${encodeURIComponent(shareText)}`;
                break;
            case "email":
                shareUrl = `mailto:?subject=${encodeURIComponent(shareText)}&body=${url}`;
                break;
        }

        if (shareUrl) {
            window.open(shareUrl, "_blank");
        }
    };

    // ‚úÖ –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è/–∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ —à–∞—Ä–∏–Ω–≥–∞
    window.openShareModal = function () {
        document.getElementById("share-modal").classList.add("active");
        document.body.classList.add("no-scroll");
    };

    window.closeShareModal = function () {
        document.getElementById("share-modal").classList.remove("active");
        document.body.classList.remove("no-scroll");
    };
});
