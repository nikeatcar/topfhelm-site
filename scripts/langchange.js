document.addEventListener("DOMContentLoaded", function () {
    const switchLangBtn = document.getElementById("switchLangBtn");

    if (!switchLangBtn) return; // –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∏ –Ω–µ—Ç, –≤—ã—Ö–æ–¥–∏–º

    switchLangBtn.addEventListener("click", function () {
        let currentURL = window.location.pathname;

        if (currentURL === "/" || currentURL === "/en") {
            // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∞—è –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ‚Äî –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ —Ä—É—Å—Å–∫—É—é –≤–µ—Ä—Å–∏—é
            window.location.href = "/ru";
        } else if (currentURL === "/ru") {
            // –ï—Å–ª–∏ —Ä—É—Å—Å–∫–∞—è –≤–µ—Ä—Å–∏—è ‚Äî –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫—É—é
            window.location.href = "/en";
        } else {
            // –ï—Å–ª–∏ –≤–Ω—É—Ç—Ä–∏ —Å—Ç—Ä–∞–Ω–∏—Ü (–Ω–∞–ø—Ä–∏–º–µ—Ä, /articles/article.html), –º–µ–Ω—è–µ–º en –Ω–∞ ru –∏ –Ω–∞–æ–±–æ—Ä–æ—Ç
            if (currentURL.includes("-ru")) {
                let newURL = currentURL.replace("-ru", ""); // –£–±–∏—Ä–∞–µ–º -ru –¥–ª—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–π –≤–µ—Ä—Å–∏–∏
                window.location.href = newURL;
            } else {
                let newURL = currentURL.replace(/(\/[a-zA-Z0-9-]+)(\.html)?$/, "$1-ru$2"); // –î–æ–±–∞–≤–ª—è–µ–º -ru –ø–µ—Ä–µ–¥ .html
                window.location.href = newURL;
            }
        }
    });

    console.log("–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...");

    let lang = document.documentElement.lang; // –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã

    if (lang === "ru") {
        document.body.classList.add("ru");
        console.log("–ü—Ä–∏–º–µ–Ω—ë–Ω —Ä—É—Å—Å–∫–∏–π —à—Ä–∏—Ñ—Ç Monomakh");
    } else {
        document.body.classList.add("en");
        console.log("–ü—Ä–∏–º–µ–Ω—ë–Ω –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —à—Ä–∏—Ñ—Ç IM Fell English SC");
    }

    /*;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                                                                            ;;
;;                       ----==| P R E S A V E |==----                        ;;
;;                                                                            ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;*/
setTimeout(() => {
    const presaveBtn = document.getElementById("presave-btn");

    if (presaveBtn) {
        presaveBtn.addEventListener("mouseenter", function () {
            this.style.transition = "background-color 0.3s ease-in-out";
            this.style.backgroundColor = "#FF6666"; // –ú–µ–Ω—è–µ–º —Ü–≤–µ—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏

            setTimeout(() => {
                this.innerHTML = (getLangFromURL() === "ru") ?
                    "<span>‚ù§Ô∏è–°–ø–∞—Å–∏–±–æ!‚ù§Ô∏è</span>" 
                    : "<span>‚ù§Ô∏èThank You!‚ù§Ô∏è</span>";
            }, 200);

            // –ê–Ω–∏–º–∞—Ü–∏—è –¥—ë—Ä–≥–∞–Ω–∏—è
            let intensity = 3;
            let shakeInterval = setInterval(() => {
                let x = (Math.random() * intensity * 2) - intensity;
                let y = (Math.random() * intensity * 2) - intensity;
                presaveBtn.style.transform = `translate(${x}px, ${y}px)`;
            }, 50);

            setTimeout(() => {
                clearInterval(shakeInterval);
                presaveBtn.style.transform = "translate(0, 0)";
            }, 300);
        });

        presaveBtn.addEventListener("mouseleave", function () {
            this.style.transition = "background-color 0.3s ease-in-out";
            this.style.backgroundColor = "#1DB954"; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ü–≤–µ—Ç

            setTimeout(() => {
                this.innerHTML = (getLangFromURL() === "ru") ?
                    "<span>–ü—Ä–µ–¥—Å–æ—Ö—Ä–∞–Ω—è–π</span>" 
                    : "<span>Presave Now</span>";
            }, 200);
            });
        }
    }, 500);

    /*;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                                                                              ;;
;;                 ----==| –¢ –ê –ô –ú –ï –†   –† –ï –õ –ò –ó –ê |==----                    ;;
;;                                                                              ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;*/
setTimeout(() => {
    const releaseDate = new Date("March 28, 2025 08:00:00").getTime();
    const countdownText = document.getElementById("countdown-text");
    if (!countdownText) return;

    function updateCountdown() {
        const now = new Date().getTime();
        const timeLeft = releaseDate - now;
        if (timeLeft <= 0) {
            countdownText.innerHTML = "The feast has begun! üçª‚öîÔ∏è";
            return;
        }

        const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
        const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);

        countdownText.innerHTML = (getLangFromURL() === "ru") ?
            `‚è≥ –í–µ–ª–∏–∫–∏–π –ø–∏—Ä –Ω–∞—á–Ω—ë—Ç—Å—è —á–µ—Ä–µ–∑: <span class="time">${days}</span>–¥ <span class="time">${hours}</span>—á <span class="time">${minutes}</span>–º <span class="time">${seconds}</span>—Å`
            : `‚è≥ The grand feast begins in: <span class="time">${days}</span>d <span class="time">${hours}</span>h <span class="time">${minutes}</span>m <span class="time">${seconds}</span>s`;
    }

    updateCountdown();
    setInterval(updateCountdown, 1000);
}, 500);

/*;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                                                                            ;;
;;                 ----==| –† –ê –ó –ù –´ –ï   –® –† –ò –§ –¢ –´ |==----                  ;;
;;                                                                            ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;*/
    if (getLangFromURL() === "ru") {
        document.body.classList.add("ru");
    }

});