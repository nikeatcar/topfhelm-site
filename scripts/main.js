/* jshint esversion: 6 */
/* jshint -W014 */
document.addEventListener("DOMContentLoaded", function () {
    const buttons = document.querySelectorAll(".button");
    const presaveBtn = document.getElementById("presave-btn");

/*;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                                                                            ;;
;;           ----==| –ü –ï –† –ï –ö –õ –Æ –ß –ï –ù –ò –ï   –Ø –ó –´ –ö –û –í |==----            ;;
;;                                                                            ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;*/
function getLangFromHTML() {
    return document.documentElement.lang || "en";
}

function switchLanguage(lang) {
    localStorage.setItem("lang", lang);
    document.documentElement.lang = lang; // –ú–µ–Ω—è–µ–º lang –≤ <html>

    // –û–±–Ω–æ–≤–ª—è–µ–º URL –±–µ–∑ index.html
    const newURL = lang === "ru" ? "/ru" : "/en";
    history.pushState(null, "", newURL);
    location.reload(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
}

// –ó–∞–º–µ–Ω—è–µ–º index.html –∏ index-ru.html –Ω–∞ /en –∏ /ru
if (window.location.pathname.includes("index-ru.html")) {
    history.replaceState(null, "", "/ru");
    document.documentElement.lang = "ru";
} else if (window.location.pathname.includes("index.html")) {
    history.replaceState(null, "", "/en");
    document.documentElement.lang = "en";
}

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —è–∑—ã–∫–∞
document.querySelectorAll(".language-switcher button").forEach(button => {
    button.addEventListener("click", function () {
        const lang = this.dataset.lang;
        switchLanguage(lang);
    });
});

// –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å ru/en –Ω–∞ body –¥–ª—è —Å–º–µ–Ω—ã —à—Ä–∏—Ñ—Ç–æ–≤
const currentLang = getLangFromHTML();
document.body.classList.add(currentLang);
});

/*;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                                                                            ;;
;;                       ----==| P R E S A V E |==----                        ;;
;;                                                                            ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;*/
setTimeout(() => {
    const presaveBtn = document.getElementById("presave-btn");

    if (presaveBtn) {
        presaveBtn.addEventListener("mouseenter", function () {
            this.style.transition = "background-color 0.3s ease-in-out";
            this.style.backgroundColor = "#FF6666"; // –ú–µ–Ω—è–µ–º —Ü–≤–µ—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏

            setTimeout(() => {
                this.innerHTML = (getLangFromURL() === "ru") ?
                    "<span>‚ù§Ô∏è–°–ø–∞—Å–∏–±–æ!‚ù§Ô∏è</span>" 
                    : "<span>‚ù§Ô∏èThank You!‚ù§Ô∏è</span>";
            }, 200);

            // –ê–Ω–∏–º–∞—Ü–∏—è –¥—ë—Ä–≥–∞–Ω–∏—è
            let intensity = 3;
            let shakeInterval = setInterval(() => {
                let x = (Math.random() * intensity * 2) - intensity;
                let y = (Math.random() * intensity * 2) - intensity;
                presaveBtn.style.transform = `translate(${x}px, ${y}px)`;
            }, 50);

            setTimeout(() => {
                clearInterval(shakeInterval);
                presaveBtn.style.transform = "translate(0, 0)";
            }, 300);
        });

        presaveBtn.addEventListener("mouseleave", function () {
            this.style.transition = "background-color 0.3s ease-in-out";
            this.style.backgroundColor = "#1DB954"; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ü–≤–µ—Ç

            setTimeout(() => {
                this.innerHTML = (getLangFromURL() === "ru") ?
                    "<span>–ü—Ä–µ–¥—Å–æ—Ö—Ä–∞–Ω—è–π</span>" 
                    : "<span>Presave Now</span>";
            }, 200);
            });
        }
    }, 500);

/*;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                                                                              ;;
;;                 ----==| –¢ –ê –ô –ú –ï –†   –† –ï –õ –ò –ó –ê |==----                    ;;
;;                                                                              ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;*/
    setTimeout(() => {
        const releaseDate = new Date("March 28, 2025 08:00:00").getTime();
        const countdownText = document.getElementById("countdown-text");
        if (!countdownText) return;

        function updateCountdown() {
            const now = new Date().getTime();
            const timeLeft = releaseDate - now;
            if (timeLeft <= 0) {
                countdownText.innerHTML = "The feast has begun! üçª‚öîÔ∏è";
                return;
            }

            const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
            const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
            const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);

            countdownText.innerHTML = (getLangFromURL() === "ru") ?
                `‚è≥ –í–µ–ª–∏–∫–∏–π –ø–∏—Ä –Ω–∞—á–Ω—ë—Ç—Å—è —á–µ—Ä–µ–∑: <span class="time">${days}</span>–¥ <span class="time">${hours}</span>—á <span class="time">${minutes}</span>–º <span class="time">${seconds}</span>—Å`
                : `‚è≥ The grand feast begins in: <span class="time">${days}</span>d <span class="time">${hours}</span>h <span class="time">${minutes}</span>m <span class="time">${seconds}</span>s`;
        }

        updateCountdown();
        setInterval(updateCountdown, 1000);
    }, 500);

/*;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                                                                            ;;
;;                 ----==| –† –ê –ó –ù –´ –ï   –® –† –ò –§ –¢ –´ |==----                  ;;
;;                                                                            ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;*/
        if (getLangFromURL() === "ru") {
            document.body.classList.add("ru");
        }

/*;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                                                                            ;;
;; ----==| –ê –ù –ò –ú –ê –¶ –ò –Ø   –ö –ù –û –ü –û –ö   –ü –† –ò   –ù –ê –í –ï –î –ï –ù –ò –ò |==----  ;;
;;                                                                            ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;*/

    buttons.forEach(button => {
        button.addEventListener("mouseenter", () => {
            let intensity = 3;
            let shakeInterval = setInterval(() => {
                let x = (Math.random() * intensity * 2) - intensity;
                let y = (Math.random() * intensity * 2) - intensity;
                button.style.transform = `translate(${x}px, ${y}px)`;
            }, 50);

            setTimeout(() => {
                clearInterval(shakeInterval);
                button.style.transform = "translate(0, 0)";
            }, 300);
        });
    });

/*;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                                                                            ;;
;;                         ----==| V I D E O |==----                          ;;
;;                                                                            ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;*/
        document.querySelectorAll(".youtube-placeholder").forEach(container => {
            container.addEventListener("click", function () {
                const videoId = this.getAttribute("data-video");
                const iframe = document.createElement("iframe");
                iframe.setAttribute("src", `https://www.youtube.com/embed/${videoId}?autoplay=1`);
                iframe.setAttribute("frameborder", "0");
                iframe.setAttribute("allow", "accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share");
                iframe.setAttribute("allowfullscreen", "");
                this.innerHTML = "";
                this.appendChild(iframe);
            });
        });